
CREATE OR REPLACE PROCEDURE fetch_sales_dynamic (
	order_id_param IN sales.order_id%TYPE,
    customer_id_param IN sales.customer_id%TYPE
) AS 
    TYPE sales_cursor_type IS REF CURSOR;
	sales_cursor sales_cursor_type; 
	sale_record sales%ROWTYPE;
    sql_stmt VARCHAR(500) := 'SELECT * FROM sales WHERE 1 = 1';
BEGIN
    IF order_id_param IS NOT NULL THEN
    	sql_stmt := sql_stmt || ' AND order_id = :var_1';
    END IF;

	IF customer_id_param IS NOT NULL THEN
        sql_stmt := sql_stmt || ' AND customer_id = :var_2';
    END IF;

	DBMS_OUTPUT.PUT_LINE(sql_stmt);

	IF order_id_param IS NOT NULL AND customer_id_param IS NULL THEN
        OPEN sales_cursor FOR sql_stmt USING order_id_param;
    ELSIF order_id_param IS NULL AND customer_id_param IS NOT NULL THEN
        OPEN sales_cursor FOR sql_stmt USING customer_id_param;
    ELSIF order_id_param IS NOT NULL AND customer_id_param IS NOT NULL THEN
        OPEN sales_cursor FOR sql_stmt USING order_id_param, customer_id_param;
    END IF;

	LOOP
        FETCH sales_cursor INTO sale_record;
		EXIT WHEN sales_cursor%NOTFOUND;
    	DBMS_OUTPUT.PUT_LINE(sale_record.sales_date);
        DBMS_OUTPUT.PUT_LINE(sale_record.order_id);
        DBMS_OUTPUT.PUT_LINE(sale_record.product_id);
        DBMS_OUTPUT.PUT_LINE(sale_record.customer_id);
    	DBMS_OUTPUT.PUT_LINE(sale_record.total_amount);
	END LOOP;
	CLOSE sales_cursor;
	
	EXCEPTION
        WHEN NO_DATA_FOUND THEN
        	DBMS_OUTPUT.PUT_LINE('No such order!');
        WHEN TOO_MANY_ROWS THEN
            DBMS_OUTPUT.PUT_LINE('You got more than 1 row!');
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('Error!');
END fetch_sales_dynamic;
/

EXECUTE fetch_sales_dynamic(1268, NULL);
EXECUTE fetch_sales_dynamic(NULL, 11);
EXECUTE fetch_sales_dynamic(1268, 11);
